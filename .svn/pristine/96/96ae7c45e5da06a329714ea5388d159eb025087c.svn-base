@model IPS.Tracker.Web.Models.DefectViewModel

@{
    ViewBag.Title = "Kreiraj novi zadatak";
}

<h2>Kreiraj novi zadatak</h2>

@using (Html.BeginForm("ReportNewDefect", "Home", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Problem</h4>
        <hr />
        @Html.ValidationSummary(true)
        <div class="form-group">
            @Html.LabelFor(model => model.Summary, new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.TextBoxFor(model => model.Summary, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Summary)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @rows = 3 })
                @Html.ValidationMessageFor(model => model.Description)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SelectedWorkOrderName, new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.TextBoxFor(model => model.SelectedWorkOrderName, new { @class = "form-control", id = "SelectedWorkOrderName" })
                @Html.HiddenFor(model => model.SelectedWorkOrderId, new { id = "SelectedWorkOrderId" })
                @Html.ValidationMessageFor(model => model.SelectedWorkOrderName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AssigneeId, new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.DropDownListFor(model => model.AssigneeId, Model.Assignees, new { @class = "form-control", id = "AssigneeId" })
                @Html.HiddenFor(model => model.SelectedWorkOrderId, new { id = "SelectedWorkOrderId" })
                @Html.ValidationMessageFor(model => model.AssigneeId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SelectedPriorityId, new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.DropDownListFor(vm => vm.SelectedPriorityId, Model.Priorities, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SelectedPriorityId)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <span class="btn btn-default btn-file">Priloži datoteku
                    <input type="file" name="UploadedFile" />
                </span>
                <span id="FilePath" class="left-margin" />
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Spremi" class="btn btn-danger" />
            </div>
        </div>
    </div>
}

<link href="~/jquery-ui-1.10.4.custom/css/custom-theme/jquery-ui-1.10.4.custom.min.css" type="text/css" rel="stylesheet" />
<script type="text/javascript" src="~/jquery-ui-1.10.4.custom/js/jquery-ui-1.10.4.custom.min.js"></script>
<script type="text/javascript">
    workOrders = [];

    $(document).ready(
         function () {
             var workOrdersUrl = '@Url.Action("WorkOrders", "Home")';

             $.getJSON(workOrdersUrl, saveWorkOrders);

             $("#SelectedWorkOrderName").autocomplete({
                 source: workOrders,
                 minLength: 2,
                 select: function (event, ui) {
                     var workOrderId = ui.item.value;
                     ui.item.value = ui.item.label;
                     $("#SelectedWorkOrderId").val(workOrderId);

                     var getLeaderIdUrl = '@Url.Action("GetLeaderId", "Home")';
                     $.getJSON(getLeaderIdUrl, { workOrderId: workOrderId }, changeAssignedWorker);
                 }
             });

             $("input[type='file']").change(function () {
                 var value = $(this).val();
                 var fakepath = value.search("fakepath");
                 value = value.slice(fakepath + 9);
                 $("#FilePath").append("<span class='glyphicon glyphicon-file'></span> " + value);
             });
         }
    );

         function changeAssignedWorker(response) {
             if (response != null) {
                 var leaderId = response;
                 $("#AssigneeId").val(leaderId);
             }
         }

         function saveWorkOrders(response) {
             if (response != null) {
                 for (var i = 0; i < response.length; i++) {
                     var wo = { label: response[i].Label, value: response[i].Id };
                     //
                     workOrders.push(wo);
                 }
             }
         }

         function displayWorkOrder(abbrev) {
             alert(abbrev);
         }
</script>
