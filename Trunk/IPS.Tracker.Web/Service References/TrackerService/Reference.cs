//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IPS.Tracker.Web.TrackerService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DefectDTO", Namespace="http://schemas.datacontract.org/2004/07/IPS.Tracker.WCF")]
    [System.SerializableAttribute()]
    public partial class DefectDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AssigneeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssigneeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<IPS.Tracker.Web.TrackerService.DefectCommentDTO> DefectCommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DefectDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] DefectFileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefectFileTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<IPS.Tracker.Web.TrackerService.WorkerDTO> DefectFollowersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefectStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<int> LinkedDefectNumbersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short PriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PriorityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ReleaseIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReporterIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReporterNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SprintNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SummaryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> WorkOrderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkOrderLabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkOrderNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AssigneeId {
            get {
                return this.AssigneeIdField;
            }
            set {
                if ((this.AssigneeIdField.Equals(value) != true)) {
                    this.AssigneeIdField = value;
                    this.RaisePropertyChanged("AssigneeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssigneeName {
            get {
                return this.AssigneeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AssigneeNameField, value) != true)) {
                    this.AssigneeNameField = value;
                    this.RaisePropertyChanged("AssigneeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<IPS.Tracker.Web.TrackerService.DefectCommentDTO> DefectComments {
            get {
                return this.DefectCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.DefectCommentsField, value) != true)) {
                    this.DefectCommentsField = value;
                    this.RaisePropertyChanged("DefectComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DefectDate {
            get {
                return this.DefectDateField;
            }
            set {
                if ((this.DefectDateField.Equals(value) != true)) {
                    this.DefectDateField = value;
                    this.RaisePropertyChanged("DefectDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] DefectFile {
            get {
                return this.DefectFileField;
            }
            set {
                if ((object.ReferenceEquals(this.DefectFileField, value) != true)) {
                    this.DefectFileField = value;
                    this.RaisePropertyChanged("DefectFile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefectFileType {
            get {
                return this.DefectFileTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DefectFileTypeField, value) != true)) {
                    this.DefectFileTypeField = value;
                    this.RaisePropertyChanged("DefectFileType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<IPS.Tracker.Web.TrackerService.WorkerDTO> DefectFollowers {
            get {
                return this.DefectFollowersField;
            }
            set {
                if ((object.ReferenceEquals(this.DefectFollowersField, value) != true)) {
                    this.DefectFollowersField = value;
                    this.RaisePropertyChanged("DefectFollowers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefectState {
            get {
                return this.DefectStateField;
            }
            set {
                if ((object.ReferenceEquals(this.DefectStateField, value) != true)) {
                    this.DefectStateField = value;
                    this.RaisePropertyChanged("DefectState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<int> LinkedDefectNumbers {
            get {
                return this.LinkedDefectNumbersField;
            }
            set {
                if ((object.ReferenceEquals(this.LinkedDefectNumbersField, value) != true)) {
                    this.LinkedDefectNumbersField = value;
                    this.RaisePropertyChanged("LinkedDefectNumbers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((this.PriorityField.Equals(value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PriorityDescription {
            get {
                return this.PriorityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PriorityDescriptionField, value) != true)) {
                    this.PriorityDescriptionField = value;
                    this.RaisePropertyChanged("PriorityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ReleaseId {
            get {
                return this.ReleaseIdField;
            }
            set {
                if ((this.ReleaseIdField.Equals(value) != true)) {
                    this.ReleaseIdField = value;
                    this.RaisePropertyChanged("ReleaseId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReporterId {
            get {
                return this.ReporterIdField;
            }
            set {
                if ((this.ReporterIdField.Equals(value) != true)) {
                    this.ReporterIdField = value;
                    this.RaisePropertyChanged("ReporterId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReporterName {
            get {
                return this.ReporterNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ReporterNameField, value) != true)) {
                    this.ReporterNameField = value;
                    this.RaisePropertyChanged("ReporterName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SprintNo {
            get {
                return this.SprintNoField;
            }
            set {
                if ((this.SprintNoField.Equals(value) != true)) {
                    this.SprintNoField = value;
                    this.RaisePropertyChanged("SprintNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StateDescription {
            get {
                return this.StateDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.StateDescriptionField, value) != true)) {
                    this.StateDescriptionField = value;
                    this.RaisePropertyChanged("StateDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Summary {
            get {
                return this.SummaryField;
            }
            set {
                if ((object.ReferenceEquals(this.SummaryField, value) != true)) {
                    this.SummaryField = value;
                    this.RaisePropertyChanged("Summary");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> WorkOrderId {
            get {
                return this.WorkOrderIdField;
            }
            set {
                if ((this.WorkOrderIdField.Equals(value) != true)) {
                    this.WorkOrderIdField = value;
                    this.RaisePropertyChanged("WorkOrderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkOrderLabel {
            get {
                return this.WorkOrderLabelField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkOrderLabelField, value) != true)) {
                    this.WorkOrderLabelField = value;
                    this.RaisePropertyChanged("WorkOrderLabel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkOrderName {
            get {
                return this.WorkOrderNameField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkOrderNameField, value) != true)) {
                    this.WorkOrderNameField = value;
                    this.RaisePropertyChanged("WorkOrderName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DefectCommentDTO", Namespace="http://schemas.datacontract.org/2004/07/IPS.Tracker.WCF")]
    [System.SerializableAttribute()]
    public partial class DefectCommentDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CommentDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentatorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefectDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DefectIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefectSummaryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CommentDate {
            get {
                return this.CommentDateField;
            }
            set {
                if ((this.CommentDateField.Equals(value) != true)) {
                    this.CommentDateField = value;
                    this.RaisePropertyChanged("CommentDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommentatorName {
            get {
                return this.CommentatorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentatorNameField, value) != true)) {
                    this.CommentatorNameField = value;
                    this.RaisePropertyChanged("CommentatorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefectDescription {
            get {
                return this.DefectDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DefectDescriptionField, value) != true)) {
                    this.DefectDescriptionField = value;
                    this.RaisePropertyChanged("DefectDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DefectId {
            get {
                return this.DefectIdField;
            }
            set {
                if ((this.DefectIdField.Equals(value) != true)) {
                    this.DefectIdField = value;
                    this.RaisePropertyChanged("DefectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefectSummary {
            get {
                return this.DefectSummaryField;
            }
            set {
                if ((object.ReferenceEquals(this.DefectSummaryField, value) != true)) {
                    this.DefectSummaryField = value;
                    this.RaisePropertyChanged("DefectSummary");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkerDTO", Namespace="http://schemas.datacontract.org/2004/07/IPS.Tracker.WCF")]
    [System.SerializableAttribute()]
    public partial class WorkerDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TrackerAdminField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TrackerAdmin {
            get {
                return this.TrackerAdminField;
            }
            set {
                if ((object.ReferenceEquals(this.TrackerAdminField, value) != true)) {
                    this.TrackerAdminField = value;
                    this.RaisePropertyChanged("TrackerAdmin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReleaseDTO", Namespace="http://schemas.datacontract.org/2004/07/IPS.Tracker.WCF")]
    [System.SerializableAttribute()]
    public partial class ReleaseDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ReleaseDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReleaseVersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ReleaseDate {
            get {
                return this.ReleaseDateField;
            }
            set {
                if ((this.ReleaseDateField.Equals(value) != true)) {
                    this.ReleaseDateField = value;
                    this.RaisePropertyChanged("ReleaseDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReleaseVersion {
            get {
                return this.ReleaseVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.ReleaseVersionField, value) != true)) {
                    this.ReleaseVersionField = value;
                    this.RaisePropertyChanged("ReleaseVersion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkOrderDTO", Namespace="http://schemas.datacontract.org/2004/07/IPS.Tracker.WCF")]
    [System.SerializableAttribute()]
    public partial class WorkOrderDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LeaderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrdinalNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SubNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int YearField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Leader {
            get {
                return this.LeaderField;
            }
            set {
                if ((object.ReferenceEquals(this.LeaderField, value) != true)) {
                    this.LeaderField = value;
                    this.RaisePropertyChanged("Leader");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrdinalNumber {
            get {
                return this.OrdinalNumberField;
            }
            set {
                if ((this.OrdinalNumberField.Equals(value) != true)) {
                    this.OrdinalNumberField = value;
                    this.RaisePropertyChanged("OrdinalNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SubNumber {
            get {
                return this.SubNumberField;
            }
            set {
                if ((this.SubNumberField.Equals(value) != true)) {
                    this.SubNumberField = value;
                    this.RaisePropertyChanged("SubNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Year {
            get {
                return this.YearField;
            }
            set {
                if ((this.YearField.Equals(value) != true)) {
                    this.YearField = value;
                    this.RaisePropertyChanged("Year");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TrackerService.ITrackerService")]
    public interface ITrackerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrackerService/InitializeNewDefect", ReplyAction="http://tempuri.org/ITrackerService/InitializeNewDefectResponse")]
        IPS.Tracker.Web.TrackerService.DefectDTO InitializeNewDefect();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrackerService/ReportNewDefect", ReplyAction="http://tempuri.org/ITrackerService/ReportNewDefectResponse")]
        IPS.Tracker.Web.TrackerService.DefectDTO ReportNewDefect(string summary, string description, System.Nullable<int> workOrderId, int assigneeId, int reporterId, short priority, System.Nullable<int> sprint, byte[] defectFile, string defectFileType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrackerService/SaveDefect", ReplyAction="http://tempuri.org/ITrackerService/SaveDefectResponse")]
        IPS.Tracker.Web.TrackerService.DefectDTO SaveDefect(int id, string summary, string description, System.Nullable<int> workOrderId, int assigneeId, int changedById, short priority, System.Nullable<int> sprint, string state);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrackerService/SaveRelease", ReplyAction="http://tempuri.org/ITrackerService/SaveReleaseResponse")]
        IPS.Tracker.Web.TrackerService.ReleaseDTO SaveRelease(int id, System.Nullable<System.DateTime> date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrackerService/GetDefaultAssigneeId", ReplyAction="http://tempuri.org/ITrackerService/GetDefaultAssigneeIdResponse")]
        int GetDefaultAssigneeId(int workOrderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrackerService/GetActiveWorkOrders", ReplyAction="http://tempuri.org/ITrackerService/GetActiveWorkOrdersResponse")]
        System.Collections.Generic.List<IPS.Tracker.Web.TrackerService.WorkOrderDTO> GetActiveWorkOrders();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrackerService/GetAllWorkOrders", ReplyAction="http://tempuri.org/ITrackerService/GetAllWorkOrdersResponse")]
        System.Collections.Generic.List<IPS.Tracker.Web.TrackerService.WorkOrderDTO> GetAllWorkOrders();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrackerService/GetActiveWorkers", ReplyAction="http://tempuri.org/ITrackerService/GetActiveWorkersResponse")]
        System.Collections.Generic.List<IPS.Tracker.Web.TrackerService.WorkerDTO> GetActiveWorkers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrackerService/GetDefectsByWorker", ReplyAction="http://tempuri.org/ITrackerService/GetDefectsByWorkerResponse")]
        System.Collections.Generic.List<IPS.Tracker.Web.TrackerService.DefectDTO> GetDefectsByWorker(int workerId, int pageNumber, int defectsPerPage, string state);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrackerService/GetAllDefectsByWorker", ReplyAction="http://tempuri.org/ITrackerService/GetAllDefectsByWorkerResponse")]
        System.Collections.Generic.List<IPS.Tracker.Web.TrackerService.DefectDTO> GetAllDefectsByWorker(int workerId, string state);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrackerService/GetDefectById", ReplyAction="http://tempuri.org/ITrackerService/GetDefectByIdResponse")]
        IPS.Tracker.Web.TrackerService.DefectDTO GetDefectById(int defectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrackerService/GetDefectsByWorkOrder", ReplyAction="http://tempuri.org/ITrackerService/GetDefectsByWorkOrderResponse")]
        System.Collections.Generic.List<IPS.Tracker.Web.TrackerService.DefectDTO> GetDefectsByWorkOrder(int workOrderId, string state, int page);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrackerService/CommentOnDefect", ReplyAction="http://tempuri.org/ITrackerService/CommentOnDefectResponse")]
        IPS.Tracker.Web.TrackerService.DefectCommentDTO CommentOnDefect(int defectId, int workerId, string commentText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrackerService/SearchDefects", ReplyAction="http://tempuri.org/ITrackerService/SearchDefectsResponse")]
        System.Collections.Generic.List<IPS.Tracker.Web.TrackerService.DefectDTO> SearchDefects(string searchTerm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrackerService/GetLastCommentsByWorker", ReplyAction="http://tempuri.org/ITrackerService/GetLastCommentsByWorkerResponse")]
        System.Collections.Generic.List<IPS.Tracker.Web.TrackerService.DefectCommentDTO> GetLastCommentsByWorker(int currentWorkerId, int commentNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrackerService/GetLastComments", ReplyAction="http://tempuri.org/ITrackerService/GetLastCommentsResponse")]
        System.Collections.Generic.List<IPS.Tracker.Web.TrackerService.DefectCommentDTO> GetLastComments(int commentNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrackerService/GetMaxValueSprintDefects", ReplyAction="http://tempuri.org/ITrackerService/GetMaxValueSprintDefectsResponse")]
        System.Collections.Generic.List<IPS.Tracker.Web.TrackerService.DefectDTO> GetMaxValueSprintDefects();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITrackerService/CloseSprint", ReplyAction="http://tempuri.org/ITrackerService/CloseSprintResponse")]
        void CloseSprint();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITrackerServiceChannel : IPS.Tracker.Web.TrackerService.ITrackerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TrackerServiceClient : System.ServiceModel.ClientBase<IPS.Tracker.Web.TrackerService.ITrackerService>, IPS.Tracker.Web.TrackerService.ITrackerService {
        
        public TrackerServiceClient() {
        }
        
        public TrackerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TrackerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TrackerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TrackerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public IPS.Tracker.Web.TrackerService.DefectDTO InitializeNewDefect() {
            return base.Channel.InitializeNewDefect();
        }
        
        public IPS.Tracker.Web.TrackerService.DefectDTO ReportNewDefect(string summary, string description, System.Nullable<int> workOrderId, int assigneeId, int reporterId, short priority, System.Nullable<int> sprint, byte[] defectFile, string defectFileType) {
            return base.Channel.ReportNewDefect(summary, description, workOrderId, assigneeId, reporterId, priority, sprint, defectFile, defectFileType);
        }
        
        public IPS.Tracker.Web.TrackerService.DefectDTO SaveDefect(int id, string summary, string description, System.Nullable<int> workOrderId, int assigneeId, int changedById, short priority, System.Nullable<int> sprint, string state) {
            return base.Channel.SaveDefect(id, summary, description, workOrderId, assigneeId, changedById, priority, sprint, state);
        }
        
        public IPS.Tracker.Web.TrackerService.ReleaseDTO SaveRelease(int id, System.Nullable<System.DateTime> date) {
            return base.Channel.SaveRelease(id, date);
        }
        
        public int GetDefaultAssigneeId(int workOrderId) {
            return base.Channel.GetDefaultAssigneeId(workOrderId);
        }
        
        public System.Collections.Generic.List<IPS.Tracker.Web.TrackerService.WorkOrderDTO> GetActiveWorkOrders() {
            return base.Channel.GetActiveWorkOrders();
        }
        
        public System.Collections.Generic.List<IPS.Tracker.Web.TrackerService.WorkOrderDTO> GetAllWorkOrders() {
            return base.Channel.GetAllWorkOrders();
        }
        
        public System.Collections.Generic.List<IPS.Tracker.Web.TrackerService.WorkerDTO> GetActiveWorkers() {
            return base.Channel.GetActiveWorkers();
        }
        
        public System.Collections.Generic.List<IPS.Tracker.Web.TrackerService.DefectDTO> GetDefectsByWorker(int workerId, int pageNumber, int defectsPerPage, string state) {
            return base.Channel.GetDefectsByWorker(workerId, pageNumber, defectsPerPage, state);
        }
        
        public System.Collections.Generic.List<IPS.Tracker.Web.TrackerService.DefectDTO> GetAllDefectsByWorker(int workerId, string state) {
            return base.Channel.GetAllDefectsByWorker(workerId, state);
        }
        
        public IPS.Tracker.Web.TrackerService.DefectDTO GetDefectById(int defectId) {
            return base.Channel.GetDefectById(defectId);
        }
        
        public System.Collections.Generic.List<IPS.Tracker.Web.TrackerService.DefectDTO> GetDefectsByWorkOrder(int workOrderId, string state, int page) {
            return base.Channel.GetDefectsByWorkOrder(workOrderId, state, page);
        }
        
        public IPS.Tracker.Web.TrackerService.DefectCommentDTO CommentOnDefect(int defectId, int workerId, string commentText) {
            return base.Channel.CommentOnDefect(defectId, workerId, commentText);
        }
        
        public System.Collections.Generic.List<IPS.Tracker.Web.TrackerService.DefectDTO> SearchDefects(string searchTerm) {
            return base.Channel.SearchDefects(searchTerm);
        }
        
        public System.Collections.Generic.List<IPS.Tracker.Web.TrackerService.DefectCommentDTO> GetLastCommentsByWorker(int currentWorkerId, int commentNumber) {
            return base.Channel.GetLastCommentsByWorker(currentWorkerId, commentNumber);
        }
        
        public System.Collections.Generic.List<IPS.Tracker.Web.TrackerService.DefectCommentDTO> GetLastComments(int commentNumber) {
            return base.Channel.GetLastComments(commentNumber);
        }
        
        public System.Collections.Generic.List<IPS.Tracker.Web.TrackerService.DefectDTO> GetMaxValueSprintDefects() {
            return base.Channel.GetMaxValueSprintDefects();
        }
        
        public void CloseSprint() {
            base.Channel.CloseSprint();
        }
    }
}
